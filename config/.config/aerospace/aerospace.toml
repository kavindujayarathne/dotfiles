# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# after-startup-command = ['exec-and-forget sketchybar']

# Notify Sketchybar about workspace change
# exec-on-workspace-change = ['/bin/bash', '-c',
#     'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
# ]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

#TODO: What does the below command means?
# non-empty-workspaces-root-containers-layout-on-startup = 'smart'

# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = ["move-mouse window-lazy-center"]

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
# inner.horizontal = 5
# inner.vertical =   5
# outer.left =       5
# outer.bottom =     5
# outer.top =        5
# outer.right =      5

inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0
# Main binding mode
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
#alt-enter = '''exec-and-forget osascript -e '
#tell application "Terminal"
#    do script
#    activate
#end tell'
#'''

# Layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# Focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# Move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

#TODO: Find what this is?
#alt-shift-n = 'split opposite'

# Full Screen
alt-f= 'fullscreen'

# Workspaces
alt-y = 'workspace 1'
alt-u = 'workspace 2'
alt-i = 'workspace 3'
alt-o = 'workspace 4'
alt-p = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'

# Move node to workspaces
# alt-shift-y = 'move-node-to-workspace 1 --focus-follows-window' # if you want to handle both in single command
# alt-shift-y = ['move-node-to-workspace 1', 'workspace 1'] # if you want to use more flexible way
alt-shift-y = [ 'move-node-to-workspace 1', 'workspace 1' ]
alt-shift-u = [ 'move-node-to-workspace 2', 'workspace 2' ]
alt-shift-i = [ 'move-node-to-workspace 3', 'workspace 3' ]
alt-shift-o = [ 'move-node-to-workspace 4', 'workspace 4' ]
alt-shift-p = [ 'move-node-to-workspace 5', 'workspace 5' ]
alt-shift-6 = [ 'move-node-to-workspace 6', 'workspace 6' ]
alt-shift-7 = [ 'move-node-to-workspace 7', 'workspace 7' ]
alt-shift-8 = [ 'move-node-to-workspace 8', 'workspace 8' ]
alt-shift-9 = [ 'move-node-to-workspace 9', 'workspace 9' ]

# Workspace Back and Forth
alt-tab = 'workspace-back-and-forth'

# Move workspace to monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Keybindings for different modes
alt-shift-semicolon = 'mode service'
alt-r = 'mode resize'

# Launch applications using AeroSpace
# -n = Open a new instance of an application
# -a = To target the application directly
alt-m = 'exec-and-forget terminal-notifier -title "Aerospace" -message "Launching Mail..." && open -a /System/Applications/Mail.app'
alt-b = 'exec-and-forget terminal-notifier -title "Aerospace" -message "Launching Zen Browser..." && open -a /Applications/"Zen Browser.app"'
alt-t = 'exec-and-forget terminal-notifier -title "Aerospace" -message "Launching Alacritty..." && open -a /Applications/Alacritty.app'
alt-e = 'exec-and-forget terminal-notifier -title "Aerospace" -message "Launching Finder..." && open -a /System/Library/CoreServices/Finder.app'
alt-n = 'exec-and-forget terminal-notifier -title "Aerospace" -message "Launching Notion..." && open -a /Applications/Notion.app'
alt-s = 'exec-and-forget terminal-notifier -title "Aerospace" -message "Launching Safari..." && open -a /Applications/Safari.app'
alt-a = 'exec-and-forget terminal-notifier -title "Aerospace" -message "Launching Activity Monitor..." && open -a /System/Applications/Utilities/"Activity Monitor.app"'

# Modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
0 = 'balance-sizes'
esc = 'mode main'

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
# s = ['layout sticky tiling', 'mode main']

# To open specific apps on specific workspaces
[[on-window-detected]]
if.app-id = 'org.alacritty'
run = 'move-node-to-workspace 1'

[[on-window-detected]]
if.app-id = 'org.mozilla.firefoxdeveloperedition'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = 'move-node-to-workspace 2'

# [[on-window-detected]]
# if.app-id = 'com.openai.chat'
# run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace 2'

[[on-window-detected]]
if.app-id = 'notion.id'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = "com.microsoft.Word"
run = 'move-node-to-workspace 6'

# Applications out of normal layout
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.clock'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.QuickTimePlayerX'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.PhotoBooth'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.vmware.fusion'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.utmapp.UTM'
run = 'layout floating'
